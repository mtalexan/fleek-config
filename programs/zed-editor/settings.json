// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the
// command palette (cmd-shift-p / ctrl-shift-p)
{
  "features": {
    // "Undocumented" setting for AI assistant to use for completion.
    // Can be set to any one of the providers in `assistant: show configuration`, or
    // `zed`. But ONLY 1 GITHUB AUTHORIZATION WORKS PER INSTALL.
    // Between Github CoPilot and Zed GitHub, the second will just silently fail to function.
    "edit_prediction_provider": "zed"
  },
  "icon_theme": "Colored Zed Icons Theme Dark",
  "telemetry": {
    "diagnostics": false,
    "metrics": false
  },
  "ui_font_size": 15,
  "buffer_font_size": 14,
  "buffer_line_height": "standard",
  "theme": {
    "mode": "system",
    "light": "One Light",
    "dark": "BlackFox"
  },
  "pane_split_direction_horizontal": "down",
  // The direction that you want to split panes horizontally. Defaults to "left"
  "pane_split_direction_vertical": "right",
  "wrap_guides": [80],
  "show_whitespaces": "boundary",
  "indent_guides": {
    "active_line_width": 2,
    "coloring": "indent_aware"
  },
  "seed_search_query_from_cursor": "selection",
  "use_smartcase_search": true,
  "project_panel": {
    "entry_spacing": "standard"
  },
  "collaboration_panel": {
    "button": false
  },
  "message_editor": {
    // Whether to automatically replace emoji shortcodes with emoji characters.
    // For example: typing `:wave:` gets replaced with `ðŸ‘‹`.
    "auto_replace_emoji_shortcode": false
  },
  "autosave": { "after_delay": { "milliseconds": 500 } },
  "tabs": {
    // Show git status colors in the editor tabs.
    "git_status": true,
    "file_icons": true,
    "show_diagnostics": "errors"
  },
  "file_finder": {
    "modal_max_width": "large"
  },
  "remove_trailing_whitespace_on_save": false,
  "ensure_final_newline_on_save": false,
  "format_on_save": "off",
  "soft_wrap": "editor_width",
  "diagnostics": {
    "inline": {
      "enabled": true,
      //only show inline errors, others are shown other ways
      "max_severity": "error"
    }
  },
  "git": {
    "inline_blame": {
      "show_commit_summary": true
    }
  },
  "journal": {
    "hour_format": "hour24"
  },
  "terminal": {
    "shell": {
      "program": "zsh"
    },
    "line_height": "standard",
    "detect_venv": "off",
    // max allowed is 100_000
    "max_scroll_history_lines": 100000
  },
  
  // The following is the list of installed extensions that we want installed by
  // all systems that use this same file. These have to be manually populated here by
  // running: `jq '.extensions | with_entries(.key=.value.manifest.id, .value=true)' ~/.local/share/zed/extensions/index.json`
  // and then copy-pasting the results into the auto_install_extensions here.
  "auto_install_extensions": {
    "ansible": true,
    "asciidoc": true,
    "awk": true,
    "basedpyright": true,
    "basher": true,
    "bitbake": true,
    "blackfox": true,
    "blueprint": true,
    "caddyfile": true,
    "cargo-appraiser": true,
    "cargo-tom": true,
    "catppuccin": true,
    "codebook": true,
    "colored-zed-icons-theme": true,
    "colorizer": true,
    "csv": true,
    "dark-pop-ui": true,
    "devicetree": true,
    "docker-compose": true,
    "dockerfile": true,
    "elisp": true,
    "env": true,
    "fleet-themes": true,
    "git-firefly": true,
    "go-snippets": true,
    "golangci-lint": true,
    "gosum": true,
    "graphviz": true,
    "groovy": true,
    "haskell": true,
    "helm": true,
    "html": true,
    "ini": true,
    "java": true,
    "jinja2": true,
    "jsonnet": true,
    "just": true,
    "kconfig": true,
    "latex": true,
    "log": true,
    "lua": true,
    "make": true,
    "markdown-oxide": true,
    "mermaid": true,
    "meson": true,
    "modest-dark": true,
    "neocmake": true,
    "nginx": true,
    "nickel": true,
    "nix": true,
    "one-dark-darkened": true,
    "one-dark-pro": true,
    "org": true,
    "perl": true,
    "php": true,
    "plantuml": true,
    "powershell": true,
    "proto": true,
    "pylsp": true,
    "python-refactoring": true,
    "python-requirements": true,
    "qml": true,
    "r": true,
    "racket": true,
    "rpmspec": true,
    "ruby": true,
    "scala": true,
    "scheme": true,
    "snippets": true,
    "ssh-config": true,
    "strace": true,
    "terraform": true,
    "tmux": true,
    "toml": true,
    "typos": true,
    "xml": true,
    "zedokai": true,
    "zig": true
  }
}
